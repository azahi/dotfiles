#!/bin/sh

cd || exit "$?"

if [ -f "${HOME}/.profile" ]
then
    # shellcheck disable=SC1090
    . "${HOME}/.profile"
fi

if command -v xset >/dev/null 2>&1
then
    xset m 3/2 3 &
    xset r rate 200 50 &
fi

if command -v dbus-launch >/dev/null 2>&1 \
&& [ -z "${DBUS_SESSION_BUS_ADDRESS}" ]
then
    if [ "${HOST}" != "sava" ]
    then
        eval "$(dbus-launch --sh-syntax --exit-with-x11)"
    else
        eval "$(dbus-launch --sh-syntax --exit-with-session)"
    fi
fi

if command -v xrdb >/dev/null 2>&1 \
&& [ -f "${HOME}/.xresources" ]
then
    xrdb "${HOME}/.xresources"
fi

if command -v hsetroot >/dev/null 2>&1 \
&& command -v xgetres >/dev/null 2>&1
then
    hsetroot -solid "$(xgetres background)" &
fi

if command -v setxkbmap >/dev/null 2>&1
then
    setxkbmap \
        -layout "us,ru" \
        -option "grp:win_space_toggle,compose:menu,caps:escape,terminate:ctrl_alt_bksp" &
fi

if command -v xbindkeys >/dev/null 2>&1 \
&& [ -f "${HOME}/.xbindkeysrc" ]
then
    xbindkeys &
fi

if command -v unclutter >/dev/null 2>&1
then
    unclutter --timeout 3 --ignore-scrolling --fork &
fi

if command -v autocutsel >/dev/null 2>&1
then
    autocutsel -fork &
    autocutsel -fork -selection PRIMARY &
fi

if command -v picom >/dev/null 2>&1
then
    picom --daemon &
fi

(
    MPD_CONF="${XDG_CONFIG_HOME}/mpd/mpd.conf"
    MPD_PID="${XDG_RUNTIME_DIR}/mpd.pid"
    MPDSCRIBBLE_CONF="${XDG_CONFIG_HOME}/mpdscribble.conf"
    MPDSCRIBBLE_PID="${XDG_RUNTIME_DIR}/mpdscribble.pid"

    if command -v mpd >/dev/null 2>&1 \
    && [ -f "${MPD_CONF}" ] \
    && [ ! -f "${MPD_PID}" ]
    then
        mpd "${MPD_CONF}"

        if command -v mpdscribble >/dev/null 2>&1 \
        && [ -f "${MPDSCRIBBLE_CONF}" ] \
        && [ -f "${MPD_PID}" ] \
        && [ ! -f "${MPDSCRIBBLE_PID}" ]
        then
            mpdscribble --conf "${MPDSCRIBBLE_CONF}"
        fi
    fi

    unset MPD_CONF MPD_PID MPDSCRIBBLE_CONF MPDSCRIBBLE_PID
) &

if command -v urxvtd >/dev/null 2>&1
then
    urxvtd --quiet --opendisplay --fork &
fi

for WM in dwm emacs
do
    if command -v "${WM}" >/dev/null 2>&1
    then
        if [ "${WM}" = "dwm" ] \
        && command -v dwm-status >/dev/null 2>&1
        then
            dwm-status &
        fi

        exec "${WM}"
    fi
done
