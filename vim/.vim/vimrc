set nocompatible

let $VIMFILES = expand('<sfile>:p:h')

set autoread
set backspace=indent,eol,start
set clipboard=unnamed,unnamedplus
set fillchars=vert:\ "
set hidden
set lazyredraw
set modeline
set mouse=
set noshowmode
set path+=**

set noerrorbells
set novisualbell

set splitbelow
set splitright

set complete=
set complete+=.
set complete+=b
set complete+=t
set completeopt=
set completeopt+=menu
set completeopt+=longest

set gdefault
set hlsearch
set incsearch
set iskeyword+=-
set magic

set foldmethod=marker
set nofoldenable

set shortmess=
set shortmess+=I
set shortmess+=T
set shortmess+=a
set shortmess+=c
set shortmess+=t

set nolist
set nowrap
set scrolloff=10
set sidescrolloff=10

set number
set relativenumber

set wildignorecase
set wildmenu
set wildignore=

set nobackup
set noswapfile
set noundofile
set nowritebackup

set smartcase
set ignorecase

set autoindent
set breakindent
set smartindent

set expandtab
set shiftround
set shiftwidth=4
set smarttab
set softtabstop=4
set tabstop=4

try
    set encoding=utf-8
    scriptencoding utf-8
catch
endtry

if has('autocmd')
    filetype on
    filetype plugin on
    filetype indent on
endif

if has('syntax')
    syntax enable
endif

let mapleader = ' '

nnoremap <Expr> j           v:count ? 'j' : 'gj'
nnoremap <Expr> k           v:count ? 'k' : 'gk'

nnoremap        J           gt
nnoremap        K           gT

nnoremap        <C-a>       ^h
vnoremap        <C-a>       ^h
nnoremap        H           ^h
vnoremap        H           ^h

nnoremap        <C-e>       $
vnoremap        <C-e>       $
nnoremap        L           $
vnoremap        L           $

nnoremap        N           Nzzzv
nnoremap        n           nzzzv

vnoremap        <           <gv
vnoremap        >           >gv
vnoremap        <Tab>       >gv
vnoremap        <S-Tab>     <gv
nnoremap        <Tab>       >>_
nnoremap        <S-Tab>     <<_

nnoremap        ]b          :<C-u>bnext<CR>
nnoremap        [b          :<C-u>bprevious<CR>

nnoremap        <C-h>       <C-w>h
nnoremap        <C-j>       <C-w>j
nnoremap        <C-k>       <C-w>k
nnoremap        <C-l>       <C-w>l

nnoremap        <C-l>       :<C-u>nohlsearch<Bar>redraw!<Bar>echo<CR><C-l>

cnoremap        ;/          <C-r>=expand('%:p:h').'/'<CR>
cnoremap        ;;          <C-r>=expand('%:t')<CR>
cnoremap        ;.          <C-r>=expand('%:p:r')<CR>

nnoremap        <Leader>.   :lcd %:p:h<CR>

cnoremap        <C-a>       <Home>
cnoremap        <C-e>       <End>

nnoremap        gw          vapgw

nnoremap        Q           @q

nnoremap        <Leader>c   ^v$h
nnoremap        <Leader>v   ggVG

map             <Leader>sn  ]s
map             <Leader>sp  [s
map             <Leader>sa  zg
map             <Leader>s?  z=

nnoremap        <Leader>y   "+y
nnoremap        <Leader>Y   "+Y

nnoremap        <Leader>p   "+p
nnoremap        <Leader>P   "+P

inoremap        <C-v>       <C-c>"+pi
cnoremap        <C-v>       <C-r>+

nmap            <Leader>w   :<C-u>w!<CR>
nmap            <Leader>wq  :<C-u>wq!<CR>

nnoremap        ZX          :<C-u>qa!<CR>

nnoremap        <Leader>q   :q<CR>

function! SwitchCase()
    normal! ~
    if strlen(getline('.')) != virtcol('.')
        normal! h
    endif
endfunction
nnoremap        ~           :<C-u>call SwitchCase()<CR>

function! MapGoToTab()
    let s:i = 1
    while s:i < 10
        exe 'nnoremap <Leader>' . s:i . ' :<C-u>tabnext ' . s:i . '<CR>'
        let s:i += 1
    endwhile
endfunction
call MapGoToTab()

autocmd BufEnter * set noreadonly
