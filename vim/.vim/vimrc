set nocompatible

let g:skip_defaults_vim = 1

let $VIMFILES = expand('<sfile>:p:h')

set autoread
set backspace=indent,eol,start
set clipboard=unnamed,unnamedplus
set display+=lastline
set fillchars=vert:\ "
set hidden
set history=1000
set laststatus=2
set lazyredraw
set modeline
set mouse=
set noshowmode
set path+=**
set ruler
set tabpagemax=50
set viminfo^=!

set sessionoptions-=options
set viewoptions-=options

set noerrorbells
set novisualbell

set splitbelow
set splitright

set complete=
set complete+=.
set complete+=b
set complete+=t
set completeopt=
set completeopt+=menu
set completeopt+=longest

set gdefault
set hlsearch
set incsearch
set iskeyword+=-
set magic

set foldmethod=marker
set nofoldenable

set shortmess=
set shortmess+=I
set shortmess+=T
set shortmess+=a
set shortmess+=c
set shortmess+=t

set nolist
set nowrap

set scrolloff=10
set sidescrolloff=10

set number
if v:version >= 700
    set numberwidth=3
endif

set wildignorecase
set wildmenu
set wildignore=

set nobackup
set noswapfile
set noundofile
set nowritebackup

set smartcase
set ignorecase

set autoindent
set breakindent
set smartindent

set expandtab
set shiftround
set shiftwidth=4
set smarttab
set softtabstop=4
set tabstop=4

if &t_Co == 8 && $TERM !~# '^Eterm'
    set t_Co=16
endif

if &listchars ==# 'eol:$'
    set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
endif

if v:version > 703 || v:version == 703 && has("patch541")
    set formatoptions+=j
endif

if has('path_extra')
    setglobal tags-=./tags tags-=./tags; tags^=./tags;
endif

if !has('nvim') && &ttimeoutlen == -1
    set ttimeout
    set ttimeoutlen=100
endif

try
    set encoding=utf-8
    scriptencoding utf-8
catch
endtry

try
    if &fileencodings !~? "utf-8"
        let g:added_fenc_utf8 = 1
        set fileencodings+=utf-8
    endif
catch
endtry

if has('autocmd')
    filetype plugin indent on

    if exists("+omnifunc")
        autocmd Filetype *
                    \ if &omnifunc == "" |
                    \ setlocal omnifunc=syntaxcomplete#Complete |
                    \ endif
    endif

    autocmd BufEnter * set noreadonly
endif

if has('syntax') && !exists('g:syntax_on')
    syntax enable
endif

if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
    runtime! macros/matchit.vim
endif

let mapleader = ' '

nnoremap <Expr> j           v:count ? 'j' : 'gj'
nnoremap <Expr> k           v:count ? 'k' : 'gk'

nnoremap        J           gt
nnoremap        K           gT

nnoremap        <C-a>       ^h
vnoremap        <C-a>       ^h
nnoremap        H           ^h
vnoremap        H           ^h

nnoremap        <C-e>       $
vnoremap        <C-e>       $
nnoremap        L           $
vnoremap        L           $

nnoremap        N           Nzzzv
nnoremap        n           nzzzv

inoremap        <C-u>       <C-g>u<C-u>
inoremap        <C-w>       <C-g>u<C-w>

vnoremap        <           <gv
vnoremap        >           >gv
vnoremap        <Tab>       >gv
vnoremap        <S-Tab>     <gv
nnoremap        <Tab>       >>_
nnoremap        <S-Tab>     <<_

nnoremap        ]b          :<C-u>bnext<CR>
nnoremap        [b          :<C-u>bprevious<CR>

nnoremap        <C-h>       <C-w>h
nnoremap        <C-j>       <C-w>j
nnoremap        <C-k>       <C-w>k
nnoremap        <C-l>       <C-w>l

nnoremap        *           /\<<C-r>=expand('<cword>')<CR>\><CR>
nnoremap        #           ?\<<C-r>=expand('<cword>')<CR>\><CR>

nnoremap        <C-L>       :<C-u>nohlsearch<C-r>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-l>

cnoremap        ;/          <C-r>=expand('%:p:h').'/'<CR>
cnoremap        ;;          <C-r>=expand('%:t')<CR>
cnoremap        ;.          <C-r>=expand('%:p:r')<CR>

nnoremap        <Leader>.   :<C-u>lcd %:p:h<CR>

nnoremap        Q           @q

nnoremap        <Leader>c   ^v$h
nnoremap        <Leader>v   ggVG

nnoremap        <Leader>y   "+y
nnoremap        <Leader>Y   "+Y

nnoremap        <Leader>p   "+p
nnoremap        <Leader>P   "+P

inoremap        <C-v>       <C-c>"+pi
cnoremap        <C-v>       <C-r>+

nmap            <Leader>w   :<C-u>w!<CR>
nmap            <Leader>wq  :<C-u>wq!<CR>

nnoremap        ZX          :<C-u>qa!<CR>

nnoremap        <Leader>q   :<C-u>q<CR>

command         W           w !sudo tee "%" >/dev/null

function! SwitchCase()
    normal! ~
    if strlen(getline('.')) != virtcol('.')
        normal! h
    endif
endfunction
nnoremap        ~           :<C-u>call SwitchCase()<CR>

function! s:GM()
    execute 'normal! ^'
    let first_col = virtcol('.')
    execute 'normal! g_'
    let last_col  = virtcol('.')
    execute 'normal! ' . (first_col + last_col) / 2 . '|'
endfunction
nnoremap        gm          :<C-u>call <SID>GM()<CR>
onoremap        gm          :<C-u>call <SID>GM()<CR>
